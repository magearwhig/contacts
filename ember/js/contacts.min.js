/*! emberjs-contacts 2013-07-20 */
window.Contacts = Ember.Application.create(), Contacts.Router.map(function() {
    this.resource("contacts", {
        path: "/"
    }, function() {
        this.route("havenotmet"), this.route("havemet");
    });
}), Contacts.ContactsRoute = Ember.Route.extend({
    model: function() {
        return Contacts.Contact.find();
    }
}), Contacts.ContactsIndexRoute = Ember.Route.extend({
    model: function() {
        return Contacts.Contact.find();
    }
}), Contacts.ContactsHavenotmetRoute = Ember.Route.extend({
    model: function() {
        return Contacts.Contact.filter(function(a) {
            return a.get("haveMet") ? void 0 : !0;
        });
    },
    renderTemplate: function(a) {
        this.render("contacts/index", {
            controller: a
        });
    }
}), Contacts.ContactsHavemetRoute = Ember.Route.extend({
    model: function() {
        return Contacts.Contact.filter(function(a) {
            return a.get("haveMet") ? !0 : void 0;
        });
    },
    renderTemplate: function(a) {
        this.render("contacts/index", {
            controller: a
        });
    }
}), Contacts.Store = DS.Store.extend({
    revision: 12,
    adapter: "Contacts.LSAdapter"
}), Contacts.LSAdapter = DS.LSAdapter.extend({
    namespace: "contacts-emberjs"
}), Contacts.Contact = DS.Model.extend({
    firstName: DS.attr("string"),
    lastName: DS.attr("string"),
    company: DS.attr("string"),
    address: DS.attr("string"),
    city: DS.attr("string"),
    state: DS.attr("string"),
    zip: DS.attr("string"),
    phone: DS.attr("string"),
    haveMet: DS.attr("boolean")
}), Contacts.ContactsController = Ember.ArrayController.extend({
    createContact: function() {
        var a = this.get("newContactFirstName");
        if (a.trim()) {
            var b = this.get("newContactLastName");
            if (b.trim()) {
                var c = Contacts.Contact.createRecord({
                    firstName: a,
                    lastName: b,
                    company: this.get("newContactCompany"),
                    address: this.get("newContactAddress"),
                    city: this.get("newContactCity"),
                    state: this.get("newContactState"),
                    zip: this.get("newContactZip"),
                    phone: this.get("newContactPhone"),
                    haveMet: !1
                });
                this.set("newContactFirstName", ""), this.set("newContactLastName", ""), this.set("newContactCompany", ""), 
                this.set("newContactAddress", ""), this.set("newContactCity", ""), this.set("newContactState", ""), 
                this.set("newContactZip", ""), this.set("newContactPhone", ""), c.save();
            }
        }
    },
    toMeet: function() {
        return this.filterProperty("haveMet", !1).get("length");
    }.property("@each.haveMet"),
    contactLabel: function() {
        var a = this.get("toMeet");
        return 1 === a ? "contact" : "contacts";
    }.property("toMeet")
}), Contacts.ContactController = Ember.ObjectController.extend({
    isEditing: !1,
    deleteContact: function() {
        var a = this.get("model");
        a.deleteRecord(), a.save();
    },
    editContact: function() {
        var a = this.get("model"), b = this.get("firstName");
        if (b.trim()) {
            var c = this.get("lastName");
            c.trim() && (a.save(), this.set("isEditing", !1));
        }
    },
    haveMet: function(a, b) {
        var c = this.get("model");
        return void 0 === b ? c.get("haveMet") : (c.set("haveMet", b), c.save(), b);
    }.property("model.haveMet")
}), Contacts.displayContact = Ember.View.extend({
    doubleClick: function() {
        this.get("controller").set("isEditing", !0);
    }
});